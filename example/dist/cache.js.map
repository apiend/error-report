{"version":3,"file":"cache.js","sourceRoot":"","sources":["../../src/cache.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * 错误缓存\r\n */\r\nconst KEY = \"FE_TIMING\"; // key\r\nconst TIMES = 6; // 缓存条数\r\nconst EXPIRATION_TIME = 1000 * 60 * 24; // 过期时间\r\nlet storeStorage:any;\r\n\r\n\r\n/**\r\n * 缓存方法\r\n */\r\nfunction store(){\r\n    try {\r\n        if (!storeStorage) {\r\n            storeStorage = JSON.parse(localStorage.getItem(KEY) || '{}')\r\n        } else {\r\n            localStorage.setItem(KEY, JSON.stringify(storeStorage))\r\n        }\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}  \r\n\r\n/**\r\n * 判断是否有缓存\r\n */\r\nexport function has(key:string) {\r\n  return Object.hasOwnProperty.call(storeStorage, key);\r\n}\r\n\r\n/**\r\n * get value\r\n */\r\nexport function getItem(key:string) {\r\n  if (!has(key)) {\r\n    return false;\r\n  }\r\n  const {value,time}  = storeStorage[key] || {};\r\n  return value;\r\n}\r\n\r\nexport function setItem(key:string, repeat:any) {\r\n    if (Object.keys(storeStorage).length >= TIMES) {\r\n        clear();\r\n    }\r\n    if (has(key)) {\r\n        const value = getItem(key);\r\n\r\n        if (value >= repeat) {\r\n            return true;\r\n        }\r\n        storeStorage[key] = {\r\n            value: value + 1,\r\n            time: Date.now()\r\n        }\r\n    } else {\r\n        storeStorage[key] = {\r\n            value: 1,\r\n            time: Date.now()\r\n        }\r\n    }\r\n    store()\r\n    return false;\r\n}\r\n\r\nexport function removeItem(key:string) {\r\n    if (has(key)) {\r\n        delete storeStorage[key]\r\n        store()\r\n    }\r\n}\r\n\r\nexport function clear() {\r\n    let expiration = false;\r\n    let current = null;\r\n    let times = Number.MAX_SAFE_INTEGER;\r\n    for (let item in storeStorage) {\r\n        const { value, time } = storeStorage[item] || {};\r\n        if (new Date() - time > EXPIRATION_TIME) {\r\n            removeItem(item);\r\n            expiration = true;\r\n        }\r\n        if (+time < times) {\r\n            times = value;\r\n            current = item;\r\n        }\r\n    }\r\n    // 如果已经清理了过期时间，则有空位，不需要再次清理\r\n    if (expiration) {\r\n        return;\r\n    }\r\n    removeItem(current);\r\n}"]}