{"version":3,"file":"report.js","sourceRoot":"","sources":["../../src/cache.ts","../../src/index.ts","../../src/is.ts","../../src/util.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * 错误缓存\r\n */\r\nconst KEY = \"FE_TIMING\"; // key\r\nconst TIMES = 6; // 缓存条数\r\nconst EXPIRATION_TIME = 1000 * 60 * 24; // 过期时间\r\nlet storeStorage:any;\r\n\r\n\r\n/**\r\n * 缓存方法\r\n */\r\nfunction store(){\r\n    try {\r\n        if (!storeStorage) {\r\n            storeStorage = JSON.parse(localStorage.getItem(KEY) || '{}')\r\n        } else {\r\n            localStorage.setItem(KEY, JSON.stringify(storeStorage))\r\n        }\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}  \r\n\r\n/**\r\n * 判断是否有缓存\r\n */\r\nexport function has(key:string) {\r\n  return Object.hasOwnProperty.call(storeStorage, key);\r\n}\r\n\r\n/**\r\n * get value\r\n */\r\nexport function getItem(key:string) {\r\n  if (!has(key)) {\r\n    return false;\r\n  }\r\n  const {value,time}  = storeStorage[key] || {};\r\n  return value;\r\n}\r\n\r\nexport function setItem(key:string, repeat:any) {\r\n    if (Object.keys(storeStorage).length >= TIMES) {\r\n        clear();\r\n    }\r\n    if (has(key)) {\r\n        const value = getItem(key);\r\n\r\n        if (value >= repeat) {\r\n            return true;\r\n        }\r\n        storeStorage[key] = {\r\n            value: value + 1,\r\n            time: Date.now()\r\n        }\r\n    } else {\r\n        storeStorage[key] = {\r\n            value: 1,\r\n            time: Date.now()\r\n        }\r\n    }\r\n    store()\r\n    return false;\r\n}\r\n\r\nexport function removeItem(key:string) {\r\n    if (has(key)) {\r\n        delete storeStorage[key]\r\n        store()\r\n    }\r\n}\r\n\r\nexport function clear() {\r\n    let expiration = false;\r\n    let current = null;\r\n    let times = Number.MAX_SAFE_INTEGER;\r\n    for (let item in storeStorage) {\r\n        const { value, time } = storeStorage[item] || {};\r\n        if (new Date() - time > EXPIRATION_TIME) {\r\n            removeItem(item);\r\n            expiration = true;\r\n        }\r\n        if (+time < times) {\r\n            times = value;\r\n            current = item;\r\n        }\r\n    }\r\n    // 如果已经清理了过期时间，则有空位，不需要再次清理\r\n    if (expiration) {\r\n        return;\r\n    }\r\n    removeItem(current);\r\n}","import { getItem, setItem, removeItem, clear} from \"./cache\";\r\n\r\n\r\nsetItem(\"name\",\"thename\")\r\n\r\nconsole.log(getItem('name'));\r\n\r\nremoveItem(\"name\")\r\n\r\nclear();","/**\r\n * Checks whether given value's type is one of a few Error or Error-like\r\n * {@link isError}.\r\n *\r\n * @param wat A value to be checked.\r\n * @returns A boolean representing the result.\r\n */\r\nexport function isError(wat: any): boolean {\r\n    switch (Object.prototype.toString.call(wat)) {\r\n        case '[object Error]':\r\n            return true;\r\n        case '[object Exception]':\r\n            return true;\r\n        case '[object DOMException]':\r\n            return true;\r\n        default:\r\n            return wat instanceof Error;\r\n    }\r\n}\r\n\r\n/**\r\n * Checks whether given value's type is ErrorEvent\r\n * {@link isErrorEvent}.\r\n *\r\n * @param wat A value to be checked.\r\n * @returns A boolean representing the result.\r\n */\r\nexport function isErrorEvent(wat: any): boolean {\r\n    return Object.prototype.toString.call(wat) === '[object ErrorEvent]';\r\n}\r\n\r\n\r\n/**\r\n * Checks whether given value's type is DOMError\r\n * {@link isDOMError}.\r\n *\r\n * @param wat A value to be checked.\r\n * @returns A boolean representing the result.\r\n */\r\nexport function isDOMError(wat: any): boolean {\r\n    return Object.prototype.toString.call(wat) === '[object DOMError]';\r\n}\r\n\r\n\r\n/**\r\n * Checks whether given value's type is DOMException\r\n * {@link isDOMException}.\r\n *\r\n * @param wat A value to be checked.\r\n * @returns A boolean representing the result.\r\n */\r\nexport function isDOMException(wat: any): boolean {\r\n    return Object.prototype.toString.call(wat) === '[object DOMException]';\r\n}\r\n\r\n/**\r\n * Checks whether given value's type is an undefined\r\n * {@link isUndefined}.\r\n *\r\n * @param wat A value to be checked.\r\n * @returns A boolean representing the result.\r\n */\r\nexport function isUndefined(wat: any): boolean {\r\n    return wat === void 0;\r\n}\r\n\r\n/**\r\n * Checks whether given value's type is a function\r\n * {@link isFunction}.\r\n *\r\n * @param wat A value to be checked.\r\n * @returns A boolean representing the result.\r\n */\r\nexport function isFunction(wat: any): boolean {\r\n    return typeof wat === 'function';\r\n}\r\n\r\n/**\r\n * Checks whether given value's type is a string\r\n * {@link isString}.\r\n *\r\n * @param wat A value to be checked.\r\n * @returns A boolean representing the result.\r\n */\r\nexport function isString(wat: any): boolean {\r\n    return Object.prototype.toString.call(wat) === '[object String]';\r\n}\r\n\r\n/**\r\n * Checks whether given value's type is an array\r\n * {@link isArray}.\r\n *\r\n * @param wat A value to be checked.\r\n * @returns A boolean representing the result.\r\n */\r\nexport function isArray(wat: any): boolean {\r\n    return Object.prototype.toString.call(wat) === '[object Array]';\r\n}\r\n\r\n/**\r\n * Checks whether given value's type is an object literal\r\n * {@link isPlainObject}.\r\n *\r\n * @param wat A value to be checked.\r\n * @returns A boolean representing the result.\r\n */\r\nexport function isPlainObject(wat: any): boolean {\r\n    return Object.prototype.toString.call(wat) === '[object Object]';\r\n}\r\n\r\n/**\r\n * Checks whether given value's type is an regexp\r\n * {@link isRegExp}.\r\n *\r\n * @param wat A value to be checked.\r\n * @returns A boolean representing the result.\r\n */\r\nexport function isRegExp(wat: any): boolean {\r\n    return Object.prototype.toString.call(wat) === '[object RegExp]';\r\n}\r\n\r\n/**\r\n * Checks whether given value's type is a NaN\r\n * {@link isNaN}.\r\n *\r\n * @param wat A value to be checked.\r\n * @returns A boolean representing the result.\r\n */\r\nexport function isNaN(wat: any): boolean {\r\n    return wat !== wat;\r\n}\r\n","import { isDOMError, isDOMException, isError, isErrorEvent } from \"./is\";\r\n "]}